// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "API for managing Polls and Options",
    "title": "Poll API",
    "version": "1.0.0"
  },
  "paths": {
    "/calculate-statistics/{pollId}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "summary": "Calculate statistics for a Poll",
        "operationId": "CalculateStatistics",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "pollId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Statistics calculated successfully"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Poll not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/options": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create a new Option",
        "operationId": "CreateOption",
        "parameters": [
          {
            "description": "Option object to be created",
            "name": "option",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOption"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Option created successfully",
            "schema": {
              "$ref": "#/definitions/Option"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/options/{pollId}/{optionId}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update an existing Option",
        "operationId": "UpdateOption",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "pollId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int16",
            "name": "optionId",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated Option object",
            "name": "option",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Option updated successfully",
            "schema": {
              "$ref": "#/definitions/Option"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Option not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an Option by its ID",
        "operationId": "DeleteOption",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "pollId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int16",
            "name": "optionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Option deleted successfully"
          },
          "404": {
            "description": "Option not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/polls": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create a new Poll",
        "operationId": "CreatePoll",
        "parameters": [
          {
            "description": "Poll object to be created",
            "name": "poll",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePoll"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Poll created successfully",
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/polls/{pollId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get a Poll by its ID",
        "operationId": "GetPollByID",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "pollId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Poll found successfully",
            "schema": {
              "$ref": "#/definitions/PollWithOptions"
            }
          },
          "404": {
            "description": "Poll not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update an existing Poll",
        "operationId": "UpdatePoll",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "pollId",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated Poll object",
            "name": "poll",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePoll"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Poll updated successfully",
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Poll not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Poll by its ID",
        "operationId": "DeletePoll",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "pollId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Poll deleted successfully"
          },
          "404": {
            "description": "Poll not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/series": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create a new Series",
        "operationId": "CreateSeries",
        "parameters": [
          {
            "description": "Series object to be created",
            "name": "series",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSeries"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Series created successfully",
            "schema": {
              "$ref": "#/definitions/Series"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/series/{seriesId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get a Series by its ID",
        "operationId": "GetSeriesByID",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "seriesId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Series found successfully",
            "schema": {
              "$ref": "#/definitions/Series"
            }
          },
          "404": {
            "description": "Series not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update an existing Series",
        "operationId": "UpdateSeries",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "seriesId",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated Series object",
            "name": "series",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSeries"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Series updated successfully",
            "schema": {
              "$ref": "#/definitions/Series"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Series not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Series by its ID",
        "operationId": "DeleteSeries",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "seriesId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Series deleted successfully"
          },
          "404": {
            "description": "Series not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/telegram-updates": {
      "post": {
        "summary": "Receive updates from Telegram",
        "operationId": "ReceiveTelegramUpdates",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update received successfully"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateOption": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "PollID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "CreatePoll": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "Finish": {
          "type": "string",
          "format": "date-time"
        },
        "SeriesID": {
          "type": "integer",
          "format": "int32"
        },
        "Start": {
          "type": "string",
          "format": "date-time"
        },
        "TelegramUserID": {
          "type": "integer",
          "format": "int64"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "CreateSeries": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "CreateVote": {
      "type": "object",
      "properties": {
        "OptionID": {
          "type": "integer",
          "format": "int16"
        },
        "PollID": {
          "type": "integer",
          "format": "int32"
        },
        "UserID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Option": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "ID": {
          "type": "integer",
          "format": "int16"
        },
        "IsActualOutcome": {
          "type": "boolean"
        },
        "PollID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        },
        "TotalVotes": {
          "type": "integer",
          "format": "int32"
        },
        "UpdatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Poll": {
      "type": "object",
      "properties": {
        "CreatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "Description": {
          "type": "string"
        },
        "Finish": {
          "type": "string",
          "format": "date-time"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "Popularity": {
          "type": "integer",
          "format": "int32"
        },
        "SeriesID": {
          "type": "integer",
          "format": "int32"
        },
        "Start": {
          "type": "string",
          "format": "date-time"
        },
        "TelegramUserID": {
          "type": "integer",
          "format": "int64"
        },
        "Title": {
          "type": "string"
        },
        "UpdatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PollWithOptions": {
      "type": "object",
      "properties": {
        "CreatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "Description": {
          "type": "string"
        },
        "Finish": {
          "type": "string",
          "format": "date-time"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "Options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Option"
          }
        },
        "Popularity": {
          "type": "integer",
          "format": "int32"
        },
        "SeriesID": {
          "type": "integer",
          "format": "int32"
        },
        "Start": {
          "type": "string",
          "format": "date-time"
        },
        "TelegramUserID": {
          "type": "integer",
          "format": "int64"
        },
        "Title": {
          "type": "string"
        },
        "UpdatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Series": {
      "type": "object",
      "properties": {
        "CreatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "Description": {
          "type": "string"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        },
        "UpdatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UpdateOption": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string",
          "x-nullable": true
        },
        "IsActualOutcome": {
          "type": "boolean",
          "x-nullable": true
        },
        "Title": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "UpdatePoll": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string",
          "x-nullable": true
        },
        "Finish": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "SeriesID": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "Start": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "TelegramUserID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "Title": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "UpdateSeries": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string",
          "x-nullable": true
        },
        "Title": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Vote": {
      "type": "object",
      "properties": {
        "EpochUnixTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "OptionID": {
          "type": "integer",
          "format": "int16"
        },
        "PollID": {
          "type": "integer",
          "format": "int32"
        },
        "Position": {
          "type": "integer",
          "format": "int32"
        },
        "UserID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "API for managing Polls and Options",
    "title": "Poll API",
    "version": "1.0.0"
  },
  "paths": {
    "/calculate-statistics/{pollId}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "summary": "Calculate statistics for a Poll",
        "operationId": "CalculateStatistics",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "pollId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Statistics calculated successfully"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Poll not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/options": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create a new Option",
        "operationId": "CreateOption",
        "parameters": [
          {
            "description": "Option object to be created",
            "name": "option",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOption"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Option created successfully",
            "schema": {
              "$ref": "#/definitions/Option"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/options/{pollId}/{optionId}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update an existing Option",
        "operationId": "UpdateOption",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "pollId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int16",
            "name": "optionId",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated Option object",
            "name": "option",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Option updated successfully",
            "schema": {
              "$ref": "#/definitions/Option"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Option not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an Option by its ID",
        "operationId": "DeleteOption",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "pollId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int16",
            "name": "optionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Option deleted successfully"
          },
          "404": {
            "description": "Option not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/polls": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create a new Poll",
        "operationId": "CreatePoll",
        "parameters": [
          {
            "description": "Poll object to be created",
            "name": "poll",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePoll"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Poll created successfully",
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/polls/{pollId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get a Poll by its ID",
        "operationId": "GetPollByID",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "pollId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Poll found successfully",
            "schema": {
              "$ref": "#/definitions/PollWithOptions"
            }
          },
          "404": {
            "description": "Poll not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update an existing Poll",
        "operationId": "UpdatePoll",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "pollId",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated Poll object",
            "name": "poll",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePoll"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Poll updated successfully",
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Poll not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Poll by its ID",
        "operationId": "DeletePoll",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "pollId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Poll deleted successfully"
          },
          "404": {
            "description": "Poll not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/series": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create a new Series",
        "operationId": "CreateSeries",
        "parameters": [
          {
            "description": "Series object to be created",
            "name": "series",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSeries"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Series created successfully",
            "schema": {
              "$ref": "#/definitions/Series"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/series/{seriesId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get a Series by its ID",
        "operationId": "GetSeriesByID",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "seriesId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Series found successfully",
            "schema": {
              "$ref": "#/definitions/Series"
            }
          },
          "404": {
            "description": "Series not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update an existing Series",
        "operationId": "UpdateSeries",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "seriesId",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated Series object",
            "name": "series",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSeries"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Series updated successfully",
            "schema": {
              "$ref": "#/definitions/Series"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Series not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Series by its ID",
        "operationId": "DeleteSeries",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "seriesId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Series deleted successfully"
          },
          "404": {
            "description": "Series not found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/telegram-updates": {
      "post": {
        "summary": "Receive updates from Telegram",
        "operationId": "ReceiveTelegramUpdates",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update received successfully"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateOption": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "PollID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "CreatePoll": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "Finish": {
          "type": "string",
          "format": "date-time"
        },
        "SeriesID": {
          "type": "integer",
          "format": "int32"
        },
        "Start": {
          "type": "string",
          "format": "date-time"
        },
        "TelegramUserID": {
          "type": "integer",
          "format": "int64"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "CreateSeries": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "CreateVote": {
      "type": "object",
      "properties": {
        "OptionID": {
          "type": "integer",
          "format": "int16"
        },
        "PollID": {
          "type": "integer",
          "format": "int32"
        },
        "UserID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Option": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "ID": {
          "type": "integer",
          "format": "int16"
        },
        "IsActualOutcome": {
          "type": "boolean"
        },
        "PollID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        },
        "TotalVotes": {
          "type": "integer",
          "format": "int32"
        },
        "UpdatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Poll": {
      "type": "object",
      "properties": {
        "CreatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "Description": {
          "type": "string"
        },
        "Finish": {
          "type": "string",
          "format": "date-time"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "Popularity": {
          "type": "integer",
          "format": "int32"
        },
        "SeriesID": {
          "type": "integer",
          "format": "int32"
        },
        "Start": {
          "type": "string",
          "format": "date-time"
        },
        "TelegramUserID": {
          "type": "integer",
          "format": "int64"
        },
        "Title": {
          "type": "string"
        },
        "UpdatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PollWithOptions": {
      "type": "object",
      "properties": {
        "CreatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "Description": {
          "type": "string"
        },
        "Finish": {
          "type": "string",
          "format": "date-time"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "Options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Option"
          }
        },
        "Popularity": {
          "type": "integer",
          "format": "int32"
        },
        "SeriesID": {
          "type": "integer",
          "format": "int32"
        },
        "Start": {
          "type": "string",
          "format": "date-time"
        },
        "TelegramUserID": {
          "type": "integer",
          "format": "int64"
        },
        "Title": {
          "type": "string"
        },
        "UpdatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Series": {
      "type": "object",
      "properties": {
        "CreatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "Description": {
          "type": "string"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": {
          "type": "string"
        },
        "UpdatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UpdateOption": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string",
          "x-nullable": true
        },
        "IsActualOutcome": {
          "type": "boolean",
          "x-nullable": true
        },
        "Title": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "UpdatePoll": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string",
          "x-nullable": true
        },
        "Finish": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "SeriesID": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "Start": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "TelegramUserID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "Title": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "UpdateSeries": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string",
          "x-nullable": true
        },
        "Title": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Vote": {
      "type": "object",
      "properties": {
        "EpochUnixTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "OptionID": {
          "type": "integer",
          "format": "int16"
        },
        "PollID": {
          "type": "integer",
          "format": "int32"
        },
        "Position": {
          "type": "integer",
          "format": "int32"
        },
        "UserID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
}
