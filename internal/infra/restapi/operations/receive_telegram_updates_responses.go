// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/babadro/forecaster/internal/models/swagger"
)

// ReceiveTelegramUpdatesOKCode is the HTTP code returned for type ReceiveTelegramUpdatesOK
const ReceiveTelegramUpdatesOKCode int = 200

/*ReceiveTelegramUpdatesOK Update received successfully

swagger:response receiveTelegramUpdatesOK
*/
type ReceiveTelegramUpdatesOK struct {
}

// NewReceiveTelegramUpdatesOK creates ReceiveTelegramUpdatesOK with default headers values
func NewReceiveTelegramUpdatesOK() *ReceiveTelegramUpdatesOK {

	return &ReceiveTelegramUpdatesOK{}
}

// WriteResponse to the client
func (o *ReceiveTelegramUpdatesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ReceiveTelegramUpdatesBadRequestCode is the HTTP code returned for type ReceiveTelegramUpdatesBadRequest
const ReceiveTelegramUpdatesBadRequestCode int = 400

/*ReceiveTelegramUpdatesBadRequest Bad Request

swagger:response receiveTelegramUpdatesBadRequest
*/
type ReceiveTelegramUpdatesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewReceiveTelegramUpdatesBadRequest creates ReceiveTelegramUpdatesBadRequest with default headers values
func NewReceiveTelegramUpdatesBadRequest() *ReceiveTelegramUpdatesBadRequest {

	return &ReceiveTelegramUpdatesBadRequest{}
}

// WithPayload adds the payload to the receive telegram updates bad request response
func (o *ReceiveTelegramUpdatesBadRequest) WithPayload(payload *swagger.Error) *ReceiveTelegramUpdatesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the receive telegram updates bad request response
func (o *ReceiveTelegramUpdatesBadRequest) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReceiveTelegramUpdatesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
