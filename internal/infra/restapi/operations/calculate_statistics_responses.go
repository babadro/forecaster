// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/babadro/forecaster/internal/models/swagger"
)

// CalculateStatisticsOKCode is the HTTP code returned for type CalculateStatisticsOK
const CalculateStatisticsOKCode int = 200

/*
CalculateStatisticsOK Statistics calculated successfully

swagger:response calculateStatisticsOK
*/
type CalculateStatisticsOK struct {

	/*
	  In: Body
	*/
	Payload *swagger.PollWithOptions `json:"body,omitempty"`
}

// NewCalculateStatisticsOK creates CalculateStatisticsOK with default headers values
func NewCalculateStatisticsOK() *CalculateStatisticsOK {

	return &CalculateStatisticsOK{}
}

// WithPayload adds the payload to the calculate statistics o k response
func (o *CalculateStatisticsOK) WithPayload(payload *swagger.PollWithOptions) *CalculateStatisticsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the calculate statistics o k response
func (o *CalculateStatisticsOK) SetPayload(payload *swagger.PollWithOptions) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CalculateStatisticsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CalculateStatisticsBadRequestCode is the HTTP code returned for type CalculateStatisticsBadRequest
const CalculateStatisticsBadRequestCode int = 400

/*
CalculateStatisticsBadRequest Bad request

swagger:response calculateStatisticsBadRequest
*/
type CalculateStatisticsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewCalculateStatisticsBadRequest creates CalculateStatisticsBadRequest with default headers values
func NewCalculateStatisticsBadRequest() *CalculateStatisticsBadRequest {

	return &CalculateStatisticsBadRequest{}
}

// WithPayload adds the payload to the calculate statistics bad request response
func (o *CalculateStatisticsBadRequest) WithPayload(payload *swagger.Error) *CalculateStatisticsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the calculate statistics bad request response
func (o *CalculateStatisticsBadRequest) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CalculateStatisticsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CalculateStatisticsNotFoundCode is the HTTP code returned for type CalculateStatisticsNotFound
const CalculateStatisticsNotFoundCode int = 404

/*
CalculateStatisticsNotFound Poll not found

swagger:response calculateStatisticsNotFound
*/
type CalculateStatisticsNotFound struct {
}

// NewCalculateStatisticsNotFound creates CalculateStatisticsNotFound with default headers values
func NewCalculateStatisticsNotFound() *CalculateStatisticsNotFound {

	return &CalculateStatisticsNotFound{}
}

// WriteResponse to the client
func (o *CalculateStatisticsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// CalculateStatisticsInternalServerErrorCode is the HTTP code returned for type CalculateStatisticsInternalServerError
const CalculateStatisticsInternalServerErrorCode int = 500

/*
CalculateStatisticsInternalServerError Internal server error

swagger:response calculateStatisticsInternalServerError
*/
type CalculateStatisticsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewCalculateStatisticsInternalServerError creates CalculateStatisticsInternalServerError with default headers values
func NewCalculateStatisticsInternalServerError() *CalculateStatisticsInternalServerError {

	return &CalculateStatisticsInternalServerError{}
}

// WithPayload adds the payload to the calculate statistics internal server error response
func (o *CalculateStatisticsInternalServerError) WithPayload(payload *swagger.Error) *CalculateStatisticsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the calculate statistics internal server error response
func (o *CalculateStatisticsInternalServerError) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CalculateStatisticsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
CalculateStatisticsDefault error

swagger:response calculateStatisticsDefault
*/
type CalculateStatisticsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewCalculateStatisticsDefault creates CalculateStatisticsDefault with default headers values
func NewCalculateStatisticsDefault(code int) *CalculateStatisticsDefault {
	if code <= 0 {
		code = 500
	}

	return &CalculateStatisticsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the calculate statistics default response
func (o *CalculateStatisticsDefault) WithStatusCode(code int) *CalculateStatisticsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the calculate statistics default response
func (o *CalculateStatisticsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the calculate statistics default response
func (o *CalculateStatisticsDefault) WithPayload(payload *swagger.Error) *CalculateStatisticsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the calculate statistics default response
func (o *CalculateStatisticsDefault) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CalculateStatisticsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
