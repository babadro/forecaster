// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/babadro/forecaster/internal/models/swagger"
)

// UpdatePollOKCode is the HTTP code returned for type UpdatePollOK
const UpdatePollOKCode int = 200

/*
UpdatePollOK Poll updated successfully

swagger:response updatePollOK
*/
type UpdatePollOK struct {

	/*
	  In: Body
	*/
	Payload *swagger.Poll `json:"body,omitempty"`
}

// NewUpdatePollOK creates UpdatePollOK with default headers values
func NewUpdatePollOK() *UpdatePollOK {

	return &UpdatePollOK{}
}

// WithPayload adds the payload to the update poll o k response
func (o *UpdatePollOK) WithPayload(payload *swagger.Poll) *UpdatePollOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update poll o k response
func (o *UpdatePollOK) SetPayload(payload *swagger.Poll) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePollOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePollBadRequestCode is the HTTP code returned for type UpdatePollBadRequest
const UpdatePollBadRequestCode int = 400

/*
UpdatePollBadRequest Bad request

swagger:response updatePollBadRequest
*/
type UpdatePollBadRequest struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewUpdatePollBadRequest creates UpdatePollBadRequest with default headers values
func NewUpdatePollBadRequest() *UpdatePollBadRequest {

	return &UpdatePollBadRequest{}
}

// WithPayload adds the payload to the update poll bad request response
func (o *UpdatePollBadRequest) WithPayload(payload *swagger.Error) *UpdatePollBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update poll bad request response
func (o *UpdatePollBadRequest) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePollBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePollNotFoundCode is the HTTP code returned for type UpdatePollNotFound
const UpdatePollNotFoundCode int = 404

/*
UpdatePollNotFound Poll not found

swagger:response updatePollNotFound
*/
type UpdatePollNotFound struct {
}

// NewUpdatePollNotFound creates UpdatePollNotFound with default headers values
func NewUpdatePollNotFound() *UpdatePollNotFound {

	return &UpdatePollNotFound{}
}

// WriteResponse to the client
func (o *UpdatePollNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// UpdatePollInternalServerErrorCode is the HTTP code returned for type UpdatePollInternalServerError
const UpdatePollInternalServerErrorCode int = 500

/*
UpdatePollInternalServerError Internal server error

swagger:response updatePollInternalServerError
*/
type UpdatePollInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewUpdatePollInternalServerError creates UpdatePollInternalServerError with default headers values
func NewUpdatePollInternalServerError() *UpdatePollInternalServerError {

	return &UpdatePollInternalServerError{}
}

// WithPayload adds the payload to the update poll internal server error response
func (o *UpdatePollInternalServerError) WithPayload(payload *swagger.Error) *UpdatePollInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update poll internal server error response
func (o *UpdatePollInternalServerError) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePollInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
UpdatePollDefault error

swagger:response updatePollDefault
*/
type UpdatePollDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewUpdatePollDefault creates UpdatePollDefault with default headers values
func NewUpdatePollDefault(code int) *UpdatePollDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdatePollDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update poll default response
func (o *UpdatePollDefault) WithStatusCode(code int) *UpdatePollDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update poll default response
func (o *UpdatePollDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update poll default response
func (o *UpdatePollDefault) WithPayload(payload *swagger.Error) *UpdatePollDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update poll default response
func (o *UpdatePollDefault) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePollDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
