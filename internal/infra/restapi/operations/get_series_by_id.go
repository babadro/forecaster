// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetSeriesByIDHandlerFunc turns a function with the right signature into a get series by ID handler
type GetSeriesByIDHandlerFunc func(GetSeriesByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetSeriesByIDHandlerFunc) Handle(params GetSeriesByIDParams) middleware.Responder {
	return fn(params)
}

// GetSeriesByIDHandler interface for that can handle valid get series by ID params
type GetSeriesByIDHandler interface {
	Handle(GetSeriesByIDParams) middleware.Responder
}

// NewGetSeriesByID creates a new http.Handler for the get series by ID operation
func NewGetSeriesByID(ctx *middleware.Context, handler GetSeriesByIDHandler) *GetSeriesByID {
	return &GetSeriesByID{Context: ctx, Handler: handler}
}

/*
GetSeriesByID swagger:route GET /series/{seriesId} getSeriesById

Get a Series by its ID
*/
type GetSeriesByID struct {
	Context *middleware.Context
	Handler GetSeriesByIDHandler
}

func (o *GetSeriesByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetSeriesByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
